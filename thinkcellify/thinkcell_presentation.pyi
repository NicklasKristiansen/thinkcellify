from thinkcellify import _json_utils, _base_container, _cli_utils
from typing import Iterable, TypeAlias, Literal
from pathlib import Path

DEFAULT_ROW_LABELS = _json_utils._chart_utils.DEFAULT_ROW_LABELS
ThinkCellJSONElement = dict
TextBoxName: TypeAlias = str
DataType: TypeAlias = Literal["string", "number", "date", "percentage"]

class Presentation(_base_container.BaseContainer):
    def __init__(self, template: Path, *slide_elements: ThinkCellJSONElement) -> None: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self, s: slice | int) -> ThinkCellJSONElement: ...
    def append(self, element: ThinkCellJSONElement) -> Presentation: ...
    def extend(self, iterable: Iterable) -> Presentation: ...
    def __delitem__(self, s: slice | int) -> None: ...
    def pop(self, index: int) -> ThinkCellJSONElement: ...
    def add_chart(
            self,
            chart_name: str,
            header: list | tuple,
            header_type: DataType="string",
            row_labels: list | tuple = DEFAULT_ROW_LABELS,
            *rows: list | tuple,
            row_settingsrow_settings:dict[int] = None
    ) -> None: ...
    def add_text_box(self, name: TextBoxName, text: str) -> None: ...
    def to_powerpoint(self, output: Path) -> None: ...
    


